class Footnote extends HTMLElement{constructor(){super();const t={childList:!0,characterData:!0,subtree:!0};new MutationObserver(this.notify).observe(this,t)}notify(){const t=new CustomEvent("onFootnoteChanged",{detail:this,bubbles:!0});document.dispatchEvent(t)}connectedCallback(){this.hoverBox=this.root.querySelector("d-hover-box"),window.customElements.whenDefined("d-hover-box").then(()=>{this.hoverBox.listen(this)}),Footnote.currentFootnoteId+=1;const t=Footnote.currentFootnoteId.toString();this.root.host.id="d-footnote-"+t;const e="dt-fn-hover-box-"+t;this.hoverBox.id=e;const o=this.root.querySelector("#fn-");o.setAttribute("id","fn-"+t),o.setAttribute("data-hover-ref",e),o.textContent=t}}Footnote.currentFootnoteId=0;class FootnoteList extends HTMLElement{connectedCallback(){this.list=this.root.querySelector("ol"),this.root.style.display="none"}set footnotes(t){if(this.list.innerHTML="",t.length){this.root.style.display="";for(const e of t){const t=document.createElement("li");t.id=e.id+"-listing",t.innerHTML=e.innerHTML;const o=document.createElement("a");o.setAttribute("class","footnote-backlink"),o.textContent="[\u21a9]",o.href="#"+e.id,t.appendChild(o),this.list.appendChild(t)}}else this.root.style.display="none"}}